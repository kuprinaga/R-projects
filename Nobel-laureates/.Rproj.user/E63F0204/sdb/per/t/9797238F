{
    "collab_server" : "",
    "contents" : "\n#clear all lists\nrm(list=ls())\n\n#answer questions:\n#which country has highest number of women laureates?\n#which country has most laureates in which category?\n#which categories are most common to have 2 or more people share prize?\n#which country has most prizes? which has least?\n#what year had most categories with 2 or more people sharing prize?\n#what universities are most common for laureates?\n#who are the organizations that receieved a price?\n#what's the most common age of laureates?\n\nrequire(tidyverse)\nrequire(stringr)\n\n#read in files\ndata = read.csv(\"archive.csv\", header = TRUE )\n\n#only leave relevant columns\ndata = data[, names(data) %in% c(\"Year\", \"Category\", \"Prize.Share\", \"Laureate.Type\", \"Full.Name\", \"Birth.Date\", \"Birth.Country\", \"Sex\", \"Organization.Name\", \"Organization.Country\") ]\n\n#check for NAs\nsapply(data, function(x) sum(is.na(x)))\n\n#create a function which finds the real country name\nrealCountry = function(x){\n  value = \"\\\\(([^()]+)\\\\)\"\n  x = as.character(x)\n  if(grepl(\"\\\\(\",x) == TRUE) {\n    y = gsub(value, \"\\\\1\", ignore.case = TRUE, str_extract_all(x, value)[[1]])\n    return(as.character(y))\n  }\n  else\n  {\n      return(as.character(x))\n    }\n}\n\ndata$Birth.Country <- sapply(data$Birth.Country, realCountry)\n\n\n#separate two lists\ndata.individuals = data [ data$Laureate.Type == \"Individual\" , ]\ndata.organizations = data [ data$Laureate.Type == \"Organization\" , ]\n\n#answer questions related to individuals\n###########################################################\n##### which country has most prizes? which has least? #####\n###########################################################\n\n#use dplyr to arrange countries in descending order  \nprizes.by.country = data.individuals %>%\n  select(Birth.Country) %>% \n  group_by(Birth.Country) %>% \n  summarise(number = n()) %>% \n  arrange(-number)\n\n###########################################################\n### which country has highest number of women laureates? ##\n###########################################################\n\nprizes.by.sex = data.individuals %>%\n  select(Sex) %>%\n  group_by(Sex) %>%\n  summarise( number = n() ) %>%\n  arrange (-number)\n\n#by country and by sex\nprizes.by.sex.by.country = data.individuals %>%\n  select(Sex, Birth.Country) %>%\n  group_by(Sex, Birth.Country) %>%\n  summarise( number = n() ) %>%\n  arrange (-number)\n\n#tidy data\nprizes.by.sex.by.country = spread(prizes.by.sex.by.country, key = \"Sex\", value = \"number\")\n\n#substitute NAs\nprizes.by.sex.by.country$Female[is.na(prizes.by.sex.by.country$Female)] <- 0\nprizes.by.sex.by.country$Male[is.na(prizes.by.sex.by.country$Male)] <- 0\n\n#remove all rows where Female == 0\nprizes.by.sex.by.country = prizes.by.sex.by.country[ prizes.by.sex.by.country$Female > 0 , ]\n\n\n##########################################################\n#### what's the most common category for each country #####\n##########################################################\n\n# find most common category for the country\ncategories.by.country = data.individuals %>%\n  select(Birth.Country, Category) %>% \n  group_by(Birth.Country, Category) %>% \n  summarise(number = n()) %>% \n  filter(number == max(number))\n\n##########################################################\n#### what categories have prizes most commonly shared  ###\n##########################################################\n#display as percentage of total\n#Wolf suspects: Medicine, Physics\n\n#find number that follows a forward slash\n\nshared.prizes = data.individuals\nshared.prizes$Prize.Share = substring(shared.prizes$Prize.Share, 3)\n\nshared.prizes$Prize.Share = as.integer(shared.prizes$Prize.Share)\n\n#only display unique category, prize.share, year, country\n#group by country and year, no summarise\n\nshared.prizes = shared.prizes %>%\n  select(Category, max(Prize.Share)) %>%\n  group_by(Category)\n\nshared.prizes = aggregate(shared.prizes$Prize.Share, list(shared.prizes$Category), max)\nnames(shared.prizes) = c(\"Category\", \"Max.share\")\n  \n#only filter out unique values\nshared.prizes = unique(shared.prizes)\n\n\n",
    "created" : 1488038379689.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "217660644",
    "id" : "9797238F",
    "lastKnownWriteTime" : 1488049553,
    "last_content_update" : 1488049553784,
    "path" : "~/GitHub/R-projects/Nobel-laureates/main.R",
    "project_path" : "main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}