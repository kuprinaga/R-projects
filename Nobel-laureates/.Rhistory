summarise( number = n() ) %>%
arrange (-number)
View(laureates.by.sex)
laureates.by.sex.by.country = data.individuals %>%
select(Sex, Birth.Country) %>%
group_by(Sex, Birth.Country) %>%
summarise( number = n() ) %>%
arrange (-number)
#clear all lists
rm(list=ls())
require(tidyverse)
require(stringr)
#read in files
data = read.csv("archive.csv", header = TRUE )
#only leave relevant columns
data = data[, names(data) %in% c("Year", "Category", "Prize.Share", "Laureate.Type", "Full.Name", "Birth.Date", "Birth.Country", "Sex", "Organization.Name", "Organization.Country") ]
#check for NAs
sapply(data, function(x) sum(is.na(x)))
#create a function which finds the real country name
realCountry = function(x){
value = "\\(([^()]+)\\)"
x = as.character(x)
if(grepl("\\(",x) == TRUE) {
y = gsub(value, "\\1", ignore.case = TRUE, str_extract_all(x, value)[[1]])
return(as.character(y))
}
else
{
return(as.character(x))
}
}
data$Birth.Country <- sapply(data$Birth.Country, realCountry)
#separate two lists
data.individuals = data [ data$Laureate.Type == "Individual" , ]
data.organizations = data [ data$Laureate.Type == "Organization" , ]
laureates.by.country = data.individuals %>%
select(Birth.Country) %>%
group_by(Birth.Country) %>%
summarise(number = n()) %>%
arrange(-number)
spread(laureates.by.country, key = Categpry, value = number)
spread(laureates.by.country, key = Category, value = number)
laureates.by.country
laureates.by.country.chart = head(laureates.by.country)
View(laureates.by.country.chart)
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number))
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar()
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_histogram()
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_histogram(binwidth = 5)
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_histogram(binwidth = 5, stat = "identity")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_histogram(stat = "identity")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") + theme_bw()
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") + theme_w()
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") + theme_minimal()
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") + theme_minimal(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of individual laureates") +
xlab("Country of birth") +
ggtitle("Number of laureates by country")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_light()
ylab("Number of individual laureates") +
xlab("Country of birth") +
ggtitle("Number of laureates by country")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_light() +
ylab("Number of individual laureates") +
xlab("Country of birth") +
ggtitle("Number of laureates by country")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of individual laureates") +
xlab("Country of birth") +
ggtitle("Number of laureates by country")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
abline(h=mean(laureates.by.country.chart$number))
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
abline(h=)
mean(laureates.by.country.chart$number)
abline(h=mean(laureates.by.country.chart$number))
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
abline(h=mean(laureates.by.country.chart$number))
#clear all lists
rm(list=ls())
require(tidyverse)
require(stringr)
#read in files
data = read.csv("archive.csv", header = TRUE )
#only leave relevant columns
data = data[, names(data) %in% c("Year", "Category", "Prize.Share", "Laureate.Type", "Full.Name", "Birth.Date", "Birth.Country", "Sex", "Organization.Name", "Organization.Country") ]
#check for NAs
sapply(data, function(x) sum(is.na(x)))
#create a function which finds the real country name
realCountry = function(x){
value = "\\(([^()]+)\\)"
x = as.character(x)
if(grepl("\\(",x) == TRUE) {
y = gsub(value, "\\1", ignore.case = TRUE, str_extract_all(x, value)[[1]])
return(as.character(y))
}
else
{
return(as.character(x))
}
}
data$Birth.Country <- sapply(data$Birth.Country, realCountry)
#separate two lists
data.individuals = data [ data$Laureate.Type == "Individual" , ]
data.organizations = data [ data$Laureate.Type == "Organization" , ]
#answer questions related to individuals
###########################################################
##### which country has most laureates? which has least? ##
###########################################################
#use dplyr to arrange countries in descending order
laureates.by.country = data.individuals %>%
select(Birth.Country) %>%
group_by(Birth.Country) %>%
summarise(number = n()) %>%
arrange(-number)
laureates.by.country.chart = head(laureates.by.country)
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
abline(h=mean(laureates.by.country.chart$number))
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(number), color="blue")
#clear all lists
rm(list=ls())
require(tidyverse)
require(stringr)
#read in files
data = read.csv("archive.csv", header = TRUE )
#only leave relevant columns
data = data[, names(data) %in% c("Year", "Category", "Prize.Share", "Laureate.Type", "Full.Name", "Birth.Date", "Birth.Country", "Sex", "Organization.Name", "Organization.Country") ]
#check for NAs
sapply(data, function(x) sum(is.na(x)))
#create a function which finds the real country name
realCountry = function(x){
value = "\\(([^()]+)\\)"
x = as.character(x)
if(grepl("\\(",x) == TRUE) {
y = gsub(value, "\\1", ignore.case = TRUE, str_extract_all(x, value)[[1]])
return(as.character(y))
}
else
{
return(as.character(x))
}
}
data$Birth.Country <- sapply(data$Birth.Country, realCountry)
#separate two lists
data.individuals = data [ data$Laureate.Type == "Individual" , ]
data.organizations = data [ data$Laureate.Type == "Organization" , ]
#answer questions related to individuals
###########################################################
##### which country has most laureates? which has least? ##
###########################################################
#use dplyr to arrange countries in descending order
laureates.by.country = data.individuals %>%
select(Birth.Country) %>%
group_by(Birth.Country) %>%
summarise(number = n()) %>%
arrange(-number)
laureates.by.country.chart = head(laureates.by.country)
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(number), color="blue")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(laureates.by.country.chart$number), color="blue")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(laureates.by.country.chart$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(laureates.by.country.chart$number), color="black")+
guides(color = "none")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(laureates.by.country.chart$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(laureates.by.country.chart$number), color="black") +
guides(color = "none")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black") +
guides(color = "none")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black") +
guides(color = "none")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black") +
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country compared to Average") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black") +
#clear all lists
rm(list=ls())
require(tidyverse)
require(stringr)
#read in files
data = read.csv("archive.csv", header = TRUE )
#only leave relevant columns
data = data[, names(data) %in% c("Year", "Category", "Prize.Share", "Laureate.Type", "Full.Name", "Birth.Date", "Birth.Country", "Sex", "Organization.Name", "Organization.Country") ]
#check for NAs
sapply(data, function(x) sum(is.na(x)))
#create a function which finds the real country name
realCountry = function(x){
value = "\\(([^()]+)\\)"
x = as.character(x)
if(grepl("\\(",x) == TRUE) {
y = gsub(value, "\\1", ignore.case = TRUE, str_extract_all(x, value)[[1]])
return(as.character(y))
}
else
{
return(as.character(x))
}
}
data$Birth.Country <- sapply(data$Birth.Country, realCountry)
#separate two lists
data.individuals = data [ data$Laureate.Type == "Individual" , ]
data.organizations = data [ data$Laureate.Type == "Organization" , ]
#answer questions related to individuals
###########################################################
##### which country has most laureates? which has least? ##
###########################################################
#use dplyr to arrange countries in descending order
laureates.by.country = data.individuals %>%
select(Birth.Country) %>%
group_by(Birth.Country) %>%
summarise(number = n()) %>%
arrange(-number)
laureates.by.country.chart = head(laureates.by.country)
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country compared to Average") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(vjust = 0)+
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(vjust = 0, label = laureates.by.country$Birth.Country)+
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(label = laureates.by.country$Birth.Country)+
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(x = Birth.Country, y = number), label = laureates.by.country$Birth.Country)+
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
#geom_text(aes(x = Birth.Country, y = number), label = laureates.by.country$Birth.Country)+
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label=y), vjust = 0 )+
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = 0 )+
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = 1 )+
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme_light() +
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "bottom") +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme_light() +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme_light() +
axis.title.x = theme_blank()+
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme_light() +
opts(axis.title.x = theme_blank()) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme_light() +
theme(axis.title.x = theme_blank()) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme_light() +
theme(axis.title.x = element_blank()) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme_light() +
theme(axis.title.x = element_blank())
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme(axis.title.x = element_blank()) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme(axis.ticks.x = element_blank()) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
ggplot (data = laureates.by.country.chart, aes(x = Birth.Country, y = number)) +
geom_bar(stat = "identity", fill = "gray") +
geom_text(aes(label= laureates.by.country.chart$Birth.Country), vjust = -1 )+
theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) +
ylab("Number of Individual Laureates") +
xlab("Country of Birth") +
ggtitle("Number of Laureates by Country Compared to Average, top countries") +
geom_hline(yintercept = mean(laureates.by.country$number), color="black")
